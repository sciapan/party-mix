// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PartyMix.Persistence;

#nullable disable

namespace PartyMix.Migrations.Migrations
{
    [DbContext(typeof(PartyMixDbContext))]
    [Migration("20241109190302_AddUrlToPlaylistEntry")]
    partial class AddUrlToPlaylistEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PartyMix.Domain.Entities.PlaylistEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Song")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_playlist_entries");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("playlist_entries_room_id_idx");

                    b.ToTable("playlist_entries", (string)null);
                });

            modelBuilder.Entity("PartyMix.Domain.Entities.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(26)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP AT TIME ZONE 'UTC'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("PartyMix.Domain.Entities.PlaylistEntry", b =>
                {
                    b.HasOne("PartyMix.Domain.Entities.Room", "Room")
                        .WithMany("PlaylistEntries")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_playlist_entries_rooms");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("PartyMix.Domain.Entities.Room", b =>
                {
                    b.Navigation("PlaylistEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
