@page "/Room/{roomId}"
@using PartyMix.Contracts
@inject IHttpClientFactory HttpClientFactory;
@attribute [StreamRendering]

<PageTitle>Room</PageTitle>

@if (_room == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <h2>@_room.Name</h2>
    @if (_room.Playlist != null)
    {
        <div class="container">
            <div class="row">
                @foreach (var entry in _room.Playlist.OrderBy(x => x.Order))
                {
                    <div class="col-md-4">
                        <div class="card mb-4">
                            <div class="card-body">
                                <h5 class="card-title">@entry.Song</h5>
                                <p class="card-text">@entry.Singer</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string RoomId { get; set; }

    private RoomVm? _room { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        using var client = HttpClientFactory.CreateClient("apiClient");
        var response = await client.GetAsync($"/rooms/{RoomId}");
        if (response.IsSuccessStatusCode)
        {
            _room = await response.Content.ReadFromJsonAsync<RoomVm>();
        }
        else
        {
            // TODO add handling            
        }
        
        await base.OnInitializedAsync();
    }
}