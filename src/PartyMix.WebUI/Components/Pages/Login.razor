@page "/Login"
@inject IHttpClientFactory HttpClientFactory;
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<div class="container mt-4">
    <div class="text-center mb-4">
        Put password & room id (if required):
    </div>
    @if (!_isRoomIdProvidedFromQuery)
    {
        <div class="row mb-3">
            <label for="name" class="col-sm-2 col-form-label">Room Id:</label>
            <div class="col-sm-10">
                <input @bind="RoomId" type="text" class="form-control" id="name" name="name"/>
            </div>
        </div>    
    }
    <div class="row mb-3">
        <label for="password" class="col-sm-2 col-form-label">Password:</label>
        <div class="col-sm-10">
            <input @bind="_password" type="password" class="form-control" id="password" name="password"/>
        </div>
    </div>
    <div class="row mb-3">
        <button @onclick="LoginAsync" type="button">Login</button>
    </div>
</div>

@code {
    
    [Parameter][SupplyParameterFromQuery]
    public string? RoomId { get; set; }

    private bool _isRoomIdProvidedFromQuery = false;
    private string _password = string.Empty;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(RoomId))
        {
            _isRoomIdProvidedFromQuery = true;
        }
        
        base.OnInitialized();
    }

    private async Task LoginAsync()
    {
        using var client = HttpClientFactory.CreateClient("apiClient");
        var response = await client.PostAsJsonAsync("/login", new { Id = RoomId, Password = _password });
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo($"/Room/{RoomId}");
        }
        else
        {
            // TODO add handling
        }
    }
}